Conflict in state 78 between rule 6 and token '[' resolved as shift.
Conflict in state 78 between rule 6 and token OR resolved as reduce.
Conflict in state 78 between rule 6 and token AND resolved as reduce.
Conflict in state 78 between rule 6 and token '=' resolved as reduce.
Conflict in state 78 between rule 6 and token NOT_EQUAL resolved as reduce.
Conflict in state 78 between rule 6 and token '<' resolved as reduce.
Conflict in state 78 between rule 6 and token LESSER_EQUAL resolved as reduce.
Conflict in state 78 between rule 6 and token '>' resolved as reduce.
Conflict in state 78 between rule 6 and token GREATER_EQUAL resolved as reduce.
Conflict in state 78 between rule 6 and token '+' resolved as reduce.
Conflict in state 78 between rule 6 and token '-' resolved as reduce.
Conflict in state 78 between rule 6 and token '&' resolved as reduce.
Conflict in state 78 between rule 6 and token '*' resolved as shift.
Conflict in state 78 between rule 6 and token '/' resolved as shift.
Conflict in state 79 between rule 7 and token '[' resolved as shift.
Conflict in state 79 between rule 7 and token OR resolved as reduce.
Conflict in state 79 between rule 7 and token AND resolved as reduce.
Conflict in state 79 between rule 7 and token '=' resolved as reduce.
Conflict in state 79 between rule 7 and token NOT_EQUAL resolved as reduce.
Conflict in state 79 between rule 7 and token '<' resolved as reduce.
Conflict in state 79 between rule 7 and token LESSER_EQUAL resolved as reduce.
Conflict in state 79 between rule 7 and token '>' resolved as reduce.
Conflict in state 79 between rule 7 and token GREATER_EQUAL resolved as reduce.
Conflict in state 79 between rule 7 and token '+' resolved as reduce.
Conflict in state 79 between rule 7 and token '-' resolved as reduce.
Conflict in state 79 between rule 7 and token '&' resolved as reduce.
Conflict in state 79 between rule 7 and token '*' resolved as shift.
Conflict in state 79 between rule 7 and token '/' resolved as shift.
Conflict in state 80 between rule 8 and token '[' resolved as shift.
Conflict in state 80 between rule 8 and token OR resolved as reduce.
Conflict in state 80 between rule 8 and token AND resolved as reduce.
Conflict in state 80 between rule 8 and token '=' resolved as reduce.
Conflict in state 80 between rule 8 and token NOT_EQUAL resolved as reduce.
Conflict in state 80 between rule 8 and token '<' resolved as reduce.
Conflict in state 80 between rule 8 and token LESSER_EQUAL resolved as reduce.
Conflict in state 80 between rule 8 and token '>' resolved as reduce.
Conflict in state 80 between rule 8 and token GREATER_EQUAL resolved as reduce.
Conflict in state 80 between rule 8 and token '+' resolved as reduce.
Conflict in state 80 between rule 8 and token '-' resolved as reduce.
Conflict in state 80 between rule 8 and token '&' resolved as reduce.
Conflict in state 80 between rule 8 and token '*' resolved as reduce.
Conflict in state 80 between rule 8 and token '/' resolved as reduce.
Conflict in state 116 between rule 15 and token '[' resolved as shift.
Conflict in state 116 between rule 15 and token OR resolved as reduce.
Conflict in state 116 between rule 15 and token AND resolved as reduce.
Conflict in state 116 between rule 15 and token '=' resolved as shift.
Conflict in state 116 between rule 15 and token NOT_EQUAL resolved as shift.
Conflict in state 116 between rule 15 and token '<' resolved as shift.
Conflict in state 116 between rule 15 and token LESSER_EQUAL resolved as shift.
Conflict in state 116 between rule 15 and token '>' resolved as shift.
Conflict in state 116 between rule 15 and token GREATER_EQUAL resolved as shift.
Conflict in state 116 between rule 15 and token '+' resolved as shift.
Conflict in state 116 between rule 15 and token '-' resolved as shift.
Conflict in state 116 between rule 15 and token '&' resolved as shift.
Conflict in state 116 between rule 15 and token '*' resolved as shift.
Conflict in state 116 between rule 15 and token '/' resolved as shift.
Conflict in state 117 between rule 16 and token '[' resolved as shift.
Conflict in state 117 between rule 16 and token OR resolved as reduce.
Conflict in state 117 between rule 16 and token AND resolved as reduce.
Conflict in state 117 between rule 16 and token '=' resolved as shift.
Conflict in state 117 between rule 16 and token NOT_EQUAL resolved as shift.
Conflict in state 117 between rule 16 and token '<' resolved as shift.
Conflict in state 117 between rule 16 and token LESSER_EQUAL resolved as shift.
Conflict in state 117 between rule 16 and token '>' resolved as shift.
Conflict in state 117 between rule 16 and token GREATER_EQUAL resolved as shift.
Conflict in state 117 between rule 16 and token '+' resolved as shift.
Conflict in state 117 between rule 16 and token '-' resolved as shift.
Conflict in state 117 between rule 16 and token '&' resolved as shift.
Conflict in state 117 between rule 16 and token '*' resolved as shift.
Conflict in state 117 between rule 16 and token '/' resolved as shift.
Conflict in state 118 between rule 13 and token '[' resolved as shift.
Conflict in state 118 between rule 13 and token OR resolved as reduce.
Conflict in state 118 between rule 13 and token AND resolved as reduce.
Conflict in state 118 between rule 13 and token '=' resolved as reduce.
Conflict in state 118 between rule 13 and token NOT_EQUAL resolved as reduce.
Conflict in state 118 between rule 13 and token '<' resolved as reduce.
Conflict in state 118 between rule 13 and token LESSER_EQUAL resolved as reduce.
Conflict in state 118 between rule 13 and token '>' resolved as reduce.
Conflict in state 118 between rule 13 and token GREATER_EQUAL resolved as reduce.
Conflict in state 118 between rule 13 and token '+' resolved as shift.
Conflict in state 118 between rule 13 and token '-' resolved as shift.
Conflict in state 118 between rule 13 and token '&' resolved as shift.
Conflict in state 118 between rule 13 and token '*' resolved as shift.
Conflict in state 118 between rule 13 and token '/' resolved as shift.
Conflict in state 119 between rule 14 and token '[' resolved as shift.
Conflict in state 119 between rule 14 and token OR resolved as reduce.
Conflict in state 119 between rule 14 and token AND resolved as reduce.
Conflict in state 119 between rule 14 and token '=' resolved as reduce.
Conflict in state 119 between rule 14 and token NOT_EQUAL resolved as reduce.
Conflict in state 119 between rule 14 and token '<' resolved as reduce.
Conflict in state 119 between rule 14 and token LESSER_EQUAL resolved as reduce.
Conflict in state 119 between rule 14 and token '>' resolved as reduce.
Conflict in state 119 between rule 14 and token GREATER_EQUAL resolved as reduce.
Conflict in state 119 between rule 14 and token '+' resolved as shift.
Conflict in state 119 between rule 14 and token '-' resolved as shift.
Conflict in state 119 between rule 14 and token '&' resolved as shift.
Conflict in state 119 between rule 14 and token '*' resolved as shift.
Conflict in state 119 between rule 14 and token '/' resolved as shift.
Conflict in state 120 between rule 9 and token '[' resolved as shift.
Conflict in state 120 between rule 9 and token OR resolved as reduce.
Conflict in state 120 between rule 9 and token AND resolved as reduce.
Conflict in state 120 between rule 9 and token '=' resolved as reduce.
Conflict in state 120 between rule 9 and token NOT_EQUAL resolved as reduce.
Conflict in state 120 between rule 9 and token '<' resolved as reduce.
Conflict in state 120 between rule 9 and token LESSER_EQUAL resolved as reduce.
Conflict in state 120 between rule 9 and token '>' resolved as reduce.
Conflict in state 120 between rule 9 and token GREATER_EQUAL resolved as reduce.
Conflict in state 120 between rule 9 and token '+' resolved as shift.
Conflict in state 120 between rule 9 and token '-' resolved as shift.
Conflict in state 120 between rule 9 and token '&' resolved as shift.
Conflict in state 120 between rule 9 and token '*' resolved as shift.
Conflict in state 120 between rule 9 and token '/' resolved as shift.
Conflict in state 121 between rule 11 and token '[' resolved as shift.
Conflict in state 121 between rule 11 and token OR resolved as reduce.
Conflict in state 121 between rule 11 and token AND resolved as reduce.
Conflict in state 121 between rule 11 and token '=' resolved as reduce.
Conflict in state 121 between rule 11 and token NOT_EQUAL resolved as reduce.
Conflict in state 121 between rule 11 and token '<' resolved as reduce.
Conflict in state 121 between rule 11 and token LESSER_EQUAL resolved as reduce.
Conflict in state 121 between rule 11 and token '>' resolved as reduce.
Conflict in state 121 between rule 11 and token GREATER_EQUAL resolved as reduce.
Conflict in state 121 between rule 11 and token '+' resolved as shift.
Conflict in state 121 between rule 11 and token '-' resolved as shift.
Conflict in state 121 between rule 11 and token '&' resolved as shift.
Conflict in state 121 between rule 11 and token '*' resolved as shift.
Conflict in state 121 between rule 11 and token '/' resolved as shift.
Conflict in state 122 between rule 10 and token '[' resolved as shift.
Conflict in state 122 between rule 10 and token OR resolved as reduce.
Conflict in state 122 between rule 10 and token AND resolved as reduce.
Conflict in state 122 between rule 10 and token '=' resolved as reduce.
Conflict in state 122 between rule 10 and token NOT_EQUAL resolved as reduce.
Conflict in state 122 between rule 10 and token '<' resolved as reduce.
Conflict in state 122 between rule 10 and token LESSER_EQUAL resolved as reduce.
Conflict in state 122 between rule 10 and token '>' resolved as reduce.
Conflict in state 122 between rule 10 and token GREATER_EQUAL resolved as reduce.
Conflict in state 122 between rule 10 and token '+' resolved as shift.
Conflict in state 122 between rule 10 and token '-' resolved as shift.
Conflict in state 122 between rule 10 and token '&' resolved as shift.
Conflict in state 122 between rule 10 and token '*' resolved as shift.
Conflict in state 122 between rule 10 and token '/' resolved as shift.
Conflict in state 123 between rule 12 and token '[' resolved as shift.
Conflict in state 123 between rule 12 and token OR resolved as reduce.
Conflict in state 123 between rule 12 and token AND resolved as reduce.
Conflict in state 123 between rule 12 and token '=' resolved as reduce.
Conflict in state 123 between rule 12 and token NOT_EQUAL resolved as reduce.
Conflict in state 123 between rule 12 and token '<' resolved as reduce.
Conflict in state 123 between rule 12 and token LESSER_EQUAL resolved as reduce.
Conflict in state 123 between rule 12 and token '>' resolved as reduce.
Conflict in state 123 between rule 12 and token GREATER_EQUAL resolved as reduce.
Conflict in state 123 between rule 12 and token '+' resolved as shift.
Conflict in state 123 between rule 12 and token '-' resolved as shift.
Conflict in state 123 between rule 12 and token '&' resolved as shift.
Conflict in state 123 between rule 12 and token '*' resolved as shift.
Conflict in state 123 between rule 12 and token '/' resolved as shift.
Conflict in state 124 between rule 1 and token '[' resolved as shift.
Conflict in state 124 between rule 1 and token OR resolved as reduce.
Conflict in state 124 between rule 1 and token AND resolved as reduce.
Conflict in state 124 between rule 1 and token '=' resolved as reduce.
Conflict in state 124 between rule 1 and token NOT_EQUAL resolved as reduce.
Conflict in state 124 between rule 1 and token '<' resolved as reduce.
Conflict in state 124 between rule 1 and token LESSER_EQUAL resolved as reduce.
Conflict in state 124 between rule 1 and token '>' resolved as reduce.
Conflict in state 124 between rule 1 and token GREATER_EQUAL resolved as reduce.
Conflict in state 124 between rule 1 and token '+' resolved as reduce.
Conflict in state 124 between rule 1 and token '-' resolved as reduce.
Conflict in state 124 between rule 1 and token '&' resolved as reduce.
Conflict in state 124 between rule 1 and token '*' resolved as shift.
Conflict in state 124 between rule 1 and token '/' resolved as shift.
Conflict in state 125 between rule 2 and token '[' resolved as shift.
Conflict in state 125 between rule 2 and token OR resolved as reduce.
Conflict in state 125 between rule 2 and token AND resolved as reduce.
Conflict in state 125 between rule 2 and token '=' resolved as reduce.
Conflict in state 125 between rule 2 and token NOT_EQUAL resolved as reduce.
Conflict in state 125 between rule 2 and token '<' resolved as reduce.
Conflict in state 125 between rule 2 and token LESSER_EQUAL resolved as reduce.
Conflict in state 125 between rule 2 and token '>' resolved as reduce.
Conflict in state 125 between rule 2 and token GREATER_EQUAL resolved as reduce.
Conflict in state 125 between rule 2 and token '+' resolved as reduce.
Conflict in state 125 between rule 2 and token '-' resolved as reduce.
Conflict in state 125 between rule 2 and token '&' resolved as reduce.
Conflict in state 125 between rule 2 and token '*' resolved as shift.
Conflict in state 125 between rule 2 and token '/' resolved as shift.
Conflict in state 126 between rule 5 and token '[' resolved as shift.
Conflict in state 126 between rule 5 and token OR resolved as reduce.
Conflict in state 126 between rule 5 and token AND resolved as reduce.
Conflict in state 126 between rule 5 and token '=' resolved as reduce.
Conflict in state 126 between rule 5 and token NOT_EQUAL resolved as reduce.
Conflict in state 126 between rule 5 and token '<' resolved as reduce.
Conflict in state 126 between rule 5 and token LESSER_EQUAL resolved as reduce.
Conflict in state 126 between rule 5 and token '>' resolved as reduce.
Conflict in state 126 between rule 5 and token GREATER_EQUAL resolved as reduce.
Conflict in state 126 between rule 5 and token '+' resolved as reduce.
Conflict in state 126 between rule 5 and token '-' resolved as reduce.
Conflict in state 126 between rule 5 and token '&' resolved as reduce.
Conflict in state 126 between rule 5 and token '*' resolved as shift.
Conflict in state 126 between rule 5 and token '/' resolved as shift.
Conflict in state 127 between rule 3 and token '[' resolved as shift.
Conflict in state 127 between rule 3 and token OR resolved as reduce.
Conflict in state 127 between rule 3 and token AND resolved as reduce.
Conflict in state 127 between rule 3 and token '=' resolved as reduce.
Conflict in state 127 between rule 3 and token NOT_EQUAL resolved as reduce.
Conflict in state 127 between rule 3 and token '<' resolved as reduce.
Conflict in state 127 between rule 3 and token LESSER_EQUAL resolved as reduce.
Conflict in state 127 between rule 3 and token '>' resolved as reduce.
Conflict in state 127 between rule 3 and token GREATER_EQUAL resolved as reduce.
Conflict in state 127 between rule 3 and token '+' resolved as reduce.
Conflict in state 127 between rule 3 and token '-' resolved as reduce.
Conflict in state 127 between rule 3 and token '&' resolved as reduce.
Conflict in state 127 between rule 3 and token '*' resolved as reduce.
Conflict in state 127 between rule 3 and token '/' resolved as reduce.
Conflict in state 128 between rule 4 and token '[' resolved as shift.
Conflict in state 128 between rule 4 and token OR resolved as reduce.
Conflict in state 128 between rule 4 and token AND resolved as reduce.
Conflict in state 128 between rule 4 and token '=' resolved as reduce.
Conflict in state 128 between rule 4 and token NOT_EQUAL resolved as reduce.
Conflict in state 128 between rule 4 and token '<' resolved as reduce.
Conflict in state 128 between rule 4 and token LESSER_EQUAL resolved as reduce.
Conflict in state 128 between rule 4 and token '>' resolved as reduce.
Conflict in state 128 between rule 4 and token GREATER_EQUAL resolved as reduce.
Conflict in state 128 between rule 4 and token '+' resolved as reduce.
Conflict in state 128 between rule 4 and token '-' resolved as reduce.
Conflict in state 128 between rule 4 and token '&' resolved as reduce.
Conflict in state 128 between rule 4 and token '*' resolved as reduce.
Conflict in state 128 between rule 4 and token '/' resolved as reduce.

Grammar
rule 1    expression -> expression '+' expression
rule 2    expression -> expression '-' expression
rule 3    expression -> expression '*' expression
rule 4    expression -> expression '/' expression
rule 5    expression -> expression '&' expression
rule 6    expression -> '+' expression
rule 7    expression -> '-' expression
rule 8    expression -> NOT expression
rule 9    expression -> expression '<' expression
rule 10   expression -> expression '>' expression
rule 11   expression -> expression LESSER_EQUAL expression
rule 12   expression -> expression GREATER_EQUAL expression
rule 13   expression -> expression '=' expression
rule 14   expression -> expression NOT_EQUAL expression
rule 15   expression -> expression OR expression
rule 16   expression -> expression AND expression
rule 17   expression -> ID '(' expression_list ')'
rule 18   expression -> '(' expression ')'
rule 19   expression -> expression '[' expression ']'
rule 20   expression -> CONST_INTEGER
rule 21   expression -> CONST_FLOAT
rule 22   expression -> CONST_STRING
rule 23   expression -> CONST_CHARACTER
rule 24   expression -> CONST_BOOL
rule 25   expression -> ID
rule 26   expression -> ID '\'' LENGTH
rule 27   variable_type -> INTEGER
rule 28   variable_type -> FLOAT
rule 29   variable_type -> STRING
rule 30   variable_type -> CHARACTER
rule 31   variable_type -> BOOLEAN
rule 32   statement -> expression_statement
rule 33   statement -> while_statement
rule 34   statement -> for_statement
rule 35   statement -> if_statement
rule 36   statement -> return_statement
rule 37   statement -> empty_statement
rule 38   statement -> assigment_statement
rule 39   statement_list -> statement
rule 40   statement_list -> statement_list statement
rule 41   expression_statement -> expression ';'
rule 42   range -> expression DOUBLE_DOT expression
rule 43   range -> ID '\'' RANGE
rule 44   assigment_statement -> expression ASSIGNMENT expression ';'
rule 45   while_statement -> WHILE expression LOOP statement_list END LOOP ';'
rule 46   for_statement -> FOR ID IN range LOOP statement_list END LOOP ';'
rule 47   if_statement -> IF expression THEN statement_list elsif_statement_list else_statement END IF ';'
rule 48   if_statement -> IF expression THEN statement_list else_statement END IF ';'
rule 49   else_statement ->		/* empty */
rule 50   else_statement -> ELSE statement_list
rule 51   elsif_statement -> ELSIF expression THEN statement_list
rule 52   elsif_statement_list -> elsif_statement
rule 53   elsif_statement_list -> elsif_statement_list elsif_statement
rule 54   return_statement -> RETURN expression ';'
rule 55   return_statement -> RETURN ';'
rule 56   empty_statement -> NIL ';'
rule 57   expression_list -> expression
rule 58   expression_list -> expression_list ',' expression
rule 59   variable_declaration -> variable_list ':' variable_type
rule 60   variable_declaration -> variable_list ':' ARRAY '(' range ')' OF variable_type
rule 61   variable_list -> ID
rule 62   variable_list -> variable_list ',' ID
rule 63   variable_declaration_list -> variable_declaration
rule 64   variable_declaration_list -> variable_declaration_list ';' variable_declaration
rule 65   declaration_statement -> variable_declaration ';'
rule 66   declaration_statement -> program_block
rule 67   declaration_statement_list -> declaration_statement
rule 68   declaration_statement_list -> declaration_statement_list declaration_statement
rule 69   program_block -> PROCEDURE ID IS BEGINs statement_list END ID ';'
rule 70   program_block -> PROCEDURE ID IS declaration_statement_list BEGINs statement_list END ID ';'
rule 71   program_block -> PROCEDURE ID '(' variable_declaration_list ')' IS BEGINs statement_list END ID ';'
rule 72   program_block -> PROCEDURE ID '(' variable_declaration_list ')' IS declaration_statement_list BEGINs statement_list END ID ';'
rule 73   program_block -> FUNCTION ID RETURN variable_type IS BEGINs statement_list END ID ';'
rule 74   program_block -> FUNCTION ID RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';'
rule 75   program_block -> FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS BEGINs statement_list END ID ';'
rule 76   program_block -> FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';'
rule 77   program_block -> error
rule 78   program_list -> program_block
rule 79   program_list -> program_list program_block
rule 80   program -> program_list

Terminals, with rules where they appear

$ (-1)
'&' (38) 5
'\'' (39) 26 43
'(' (40) 17 18 60 71 72 75 76
')' (41) 17 18 60 71 72 75 76
'*' (42) 3
'+' (43) 1 6
',' (44) 58 62
'-' (45) 2 7
'/' (47) 4
':' (58) 59 60
';' (59) 41 44 45 46 47 48 54 55 56 64 65 69 70 71 72 73 74 75 76
'<' (60) 9
'=' (61) 13
'>' (62) 10
'[' (91) 19
']' (93) 19
error (256) 77
INTEGER (258) 27
BOOLEAN (259) 31
FLOAT (260) 28
CHARACTER (261) 30
STRING (262) 29
ARRAY (263) 60
ID (264) 17 25 26 43 46 61 62 69 70 71 72 73 74 75 76
CONST_STRING (265) 22
CONST_INTEGER (266) 20
CONST_FLOAT (267) 21
CONST_CHARACTER (268) 23
CONST_BOOL (269) 24
RANGE (270) 43
LENGTH (271) 26
NIL (272) 56
WHILE (273) 45
FOR (274) 46
IN (275) 46
OF (276) 60
LOOP (277) 45 46
IF (278) 47 48
THEN (279) 47 48 51
ELSIF (280) 51
ELSE (281) 50
FUNCTION (282) 73 74 75 76
PROCEDURE (283) 69 70 71 72
IS (284) 69 70 71 72 73 74 75 76
RETURN (285) 54 55 73 74 75 76
BEGINs (286) 69 70 71 72 73 74 75 76
END (287) 45 46 47 48 69 70 71 72 73 74 75 76
DOUBLE_DOT (288) 42
ASSIGNMENT (289) 44
OR (290) 15
AND (291) 16
NOT_EQUAL (292) 14
LESSER_EQUAL (293) 11
GREATER_EQUAL (294) 12
UMINUS (295)
UPLUS (296)
NOT (297) 8

Nonterminals, with rules where they appear

expression (59)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
    22 23 24 25 26, on right: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
    18 19 41 42 44 45 47 48 51 54 57 58
variable_type (60)
    on left: 27 28 29 30 31, on right: 59 60 73 74 75 76
statement (61)
    on left: 32 33 34 35 36 37 38, on right: 39 40
statement_list (62)
    on left: 39 40, on right: 40 45 46 47 48 50 51 69 70 71 72 73 74
    75 76
expression_statement (63)
    on left: 41, on right: 32
range (64)
    on left: 42 43, on right: 46 60
assigment_statement (65)
    on left: 44, on right: 38
while_statement (66)
    on left: 45, on right: 33
for_statement (67)
    on left: 46, on right: 34
if_statement (68)
    on left: 47 48, on right: 35
else_statement (69)
    on left: 49 50, on right: 47 48
elsif_statement (70)
    on left: 51, on right: 52 53
elsif_statement_list (71)
    on left: 52 53, on right: 47 53
return_statement (72)
    on left: 54 55, on right: 36
empty_statement (73)
    on left: 56, on right: 37
expression_list (74)
    on left: 57 58, on right: 17 58
variable_declaration (75)
    on left: 59 60, on right: 63 64 65
variable_list (76)
    on left: 61 62, on right: 59 60 62
variable_declaration_list (77)
    on left: 63 64, on right: 64 71 72 75 76
declaration_statement (78)
    on left: 65 66, on right: 67 68
declaration_statement_list (79)
    on left: 67 68, on right: 68 70 72 74 76
program_block (80)
    on left: 69 70 71 72 73 74 75 76 77, on right: 66 78 79
program_list (81)
    on left: 78 79, on right: 79 80
program (82)
    on left: 80


state 0

    error	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3

    program_block	go to state 4
    program_list	go to state 5
    program	go to state 207



state 1

    program_block  ->  error .   (rule 77)

    $default	reduce using rule 77 (program_block)



state 2

    program_block  ->  FUNCTION . ID RETURN variable_type IS BEGINs statement_list END ID ';'   (rule 73)
    program_block  ->  FUNCTION . ID RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 74)
    program_block  ->  FUNCTION . ID '(' variable_declaration_list ')' RETURN variable_type IS BEGINs statement_list END ID ';'   (rule 75)
    program_block  ->  FUNCTION . ID '(' variable_declaration_list ')' RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 76)

    ID  	shift, and go to state 6



state 3

    program_block  ->  PROCEDURE . ID IS BEGINs statement_list END ID ';'   (rule 69)
    program_block  ->  PROCEDURE . ID IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 70)
    program_block  ->  PROCEDURE . ID '(' variable_declaration_list ')' IS BEGINs statement_list END ID ';'   (rule 71)
    program_block  ->  PROCEDURE . ID '(' variable_declaration_list ')' IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 72)

    ID  	shift, and go to state 7



state 4

    program_list  ->  program_block .   (rule 78)

    $default	reduce using rule 78 (program_list)



state 5

    program_list  ->  program_list . program_block   (rule 79)
    program  ->  program_list .   (rule 80)

    error	shift, and go to state 1
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3

    $   	reduce using rule 80 (program)

    program_block	go to state 8



state 6

    program_block  ->  FUNCTION ID . RETURN variable_type IS BEGINs statement_list END ID ';'   (rule 73)
    program_block  ->  FUNCTION ID . RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 74)
    program_block  ->  FUNCTION ID . '(' variable_declaration_list ')' RETURN variable_type IS BEGINs statement_list END ID ';'   (rule 75)
    program_block  ->  FUNCTION ID . '(' variable_declaration_list ')' RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 76)

    RETURN	shift, and go to state 9
    '(' 	shift, and go to state 10



state 7

    program_block  ->  PROCEDURE ID . IS BEGINs statement_list END ID ';'   (rule 69)
    program_block  ->  PROCEDURE ID . IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 70)
    program_block  ->  PROCEDURE ID . '(' variable_declaration_list ')' IS BEGINs statement_list END ID ';'   (rule 71)
    program_block  ->  PROCEDURE ID . '(' variable_declaration_list ')' IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 72)

    IS  	shift, and go to state 11
    '(' 	shift, and go to state 12



state 8

    program_list  ->  program_list program_block .   (rule 79)

    $default	reduce using rule 79 (program_list)



state 9

    program_block  ->  FUNCTION ID RETURN . variable_type IS BEGINs statement_list END ID ';'   (rule 73)
    program_block  ->  FUNCTION ID RETURN . variable_type IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 74)

    INTEGER	shift, and go to state 13
    BOOLEAN	shift, and go to state 14
    FLOAT	shift, and go to state 15
    CHARACTER	shift, and go to state 16
    STRING	shift, and go to state 17

    variable_type	go to state 18



state 10

    program_block  ->  FUNCTION ID '(' . variable_declaration_list ')' RETURN variable_type IS BEGINs statement_list END ID ';'   (rule 75)
    program_block  ->  FUNCTION ID '(' . variable_declaration_list ')' RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 76)

    ID  	shift, and go to state 19

    variable_declaration	go to state 20
    variable_list	go to state 21
    variable_declaration_list	go to state 22



state 11

    program_block  ->  PROCEDURE ID IS . BEGINs statement_list END ID ';'   (rule 69)
    program_block  ->  PROCEDURE ID IS . declaration_statement_list BEGINs statement_list END ID ';'   (rule 70)

    error	shift, and go to state 1
    ID  	shift, and go to state 19
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3
    BEGINs	shift, and go to state 23

    variable_declaration	go to state 24
    variable_list	go to state 21
    declaration_statement	go to state 25
    declaration_statement_list	go to state 26
    program_block	go to state 27



state 12

    program_block  ->  PROCEDURE ID '(' . variable_declaration_list ')' IS BEGINs statement_list END ID ';'   (rule 71)
    program_block  ->  PROCEDURE ID '(' . variable_declaration_list ')' IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 72)

    ID  	shift, and go to state 19

    variable_declaration	go to state 20
    variable_list	go to state 21
    variable_declaration_list	go to state 28



state 13

    variable_type  ->  INTEGER .   (rule 27)

    $default	reduce using rule 27 (variable_type)



state 14

    variable_type  ->  BOOLEAN .   (rule 31)

    $default	reduce using rule 31 (variable_type)



state 15

    variable_type  ->  FLOAT .   (rule 28)

    $default	reduce using rule 28 (variable_type)



state 16

    variable_type  ->  CHARACTER .   (rule 30)

    $default	reduce using rule 30 (variable_type)



state 17

    variable_type  ->  STRING .   (rule 29)

    $default	reduce using rule 29 (variable_type)



state 18

    program_block  ->  FUNCTION ID RETURN variable_type . IS BEGINs statement_list END ID ';'   (rule 73)
    program_block  ->  FUNCTION ID RETURN variable_type . IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 74)

    IS  	shift, and go to state 29



state 19

    variable_list  ->  ID .   (rule 61)

    $default	reduce using rule 61 (variable_list)



state 20

    variable_declaration_list  ->  variable_declaration .   (rule 63)

    $default	reduce using rule 63 (variable_declaration_list)



state 21

    variable_declaration  ->  variable_list . ':' variable_type   (rule 59)
    variable_declaration  ->  variable_list . ':' ARRAY '(' range ')' OF variable_type   (rule 60)
    variable_list  ->  variable_list . ',' ID   (rule 62)

    ',' 	shift, and go to state 30
    ':' 	shift, and go to state 31



state 22

    variable_declaration_list  ->  variable_declaration_list . ';' variable_declaration   (rule 64)
    program_block  ->  FUNCTION ID '(' variable_declaration_list . ')' RETURN variable_type IS BEGINs statement_list END ID ';'   (rule 75)
    program_block  ->  FUNCTION ID '(' variable_declaration_list . ')' RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 76)

    ';' 	shift, and go to state 32
    ')' 	shift, and go to state 33



state 23

    program_block  ->  PROCEDURE ID IS BEGINs . statement_list END ID ';'   (rule 69)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 51
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 24

    declaration_statement  ->  variable_declaration . ';'   (rule 65)

    ';' 	shift, and go to state 59



state 25

    declaration_statement_list  ->  declaration_statement .   (rule 67)

    $default	reduce using rule 67 (declaration_statement_list)



state 26

    declaration_statement_list  ->  declaration_statement_list . declaration_statement   (rule 68)
    program_block  ->  PROCEDURE ID IS declaration_statement_list . BEGINs statement_list END ID ';'   (rule 70)

    error	shift, and go to state 1
    ID  	shift, and go to state 19
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3
    BEGINs	shift, and go to state 60

    variable_declaration	go to state 24
    variable_list	go to state 21
    declaration_statement	go to state 61
    program_block	go to state 27



state 27

    declaration_statement  ->  program_block .   (rule 66)

    $default	reduce using rule 66 (declaration_statement)



state 28

    variable_declaration_list  ->  variable_declaration_list . ';' variable_declaration   (rule 64)
    program_block  ->  PROCEDURE ID '(' variable_declaration_list . ')' IS BEGINs statement_list END ID ';'   (rule 71)
    program_block  ->  PROCEDURE ID '(' variable_declaration_list . ')' IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 72)

    ';' 	shift, and go to state 32
    ')' 	shift, and go to state 62



state 29

    program_block  ->  FUNCTION ID RETURN variable_type IS . BEGINs statement_list END ID ';'   (rule 73)
    program_block  ->  FUNCTION ID RETURN variable_type IS . declaration_statement_list BEGINs statement_list END ID ';'   (rule 74)

    error	shift, and go to state 1
    ID  	shift, and go to state 19
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3
    BEGINs	shift, and go to state 63

    variable_declaration	go to state 24
    variable_list	go to state 21
    declaration_statement	go to state 25
    declaration_statement_list	go to state 64
    program_block	go to state 27



state 30

    variable_list  ->  variable_list ',' . ID   (rule 62)

    ID  	shift, and go to state 65



state 31

    variable_declaration  ->  variable_list ':' . variable_type   (rule 59)
    variable_declaration  ->  variable_list ':' . ARRAY '(' range ')' OF variable_type   (rule 60)

    INTEGER	shift, and go to state 13
    BOOLEAN	shift, and go to state 14
    FLOAT	shift, and go to state 15
    CHARACTER	shift, and go to state 16
    STRING	shift, and go to state 17
    ARRAY	shift, and go to state 66

    variable_type	go to state 67



state 32

    variable_declaration_list  ->  variable_declaration_list ';' . variable_declaration   (rule 64)

    ID  	shift, and go to state 19

    variable_declaration	go to state 68
    variable_list	go to state 21



state 33

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' . RETURN variable_type IS BEGINs statement_list END ID ';'   (rule 75)
    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' . RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 76)

    RETURN	shift, and go to state 69



state 34

    expression  ->  ID . '(' expression_list ')'   (rule 17)
    expression  ->  ID .   (rule 25)
    expression  ->  ID . '\'' LENGTH   (rule 26)

    '\''	shift, and go to state 70
    '(' 	shift, and go to state 71

    $default	reduce using rule 25 (expression)



state 35

    expression  ->  CONST_STRING .   (rule 22)

    $default	reduce using rule 22 (expression)



state 36

    expression  ->  CONST_INTEGER .   (rule 20)

    $default	reduce using rule 20 (expression)



state 37

    expression  ->  CONST_FLOAT .   (rule 21)

    $default	reduce using rule 21 (expression)



state 38

    expression  ->  CONST_CHARACTER .   (rule 23)

    $default	reduce using rule 23 (expression)



state 39

    expression  ->  CONST_BOOL .   (rule 24)

    $default	reduce using rule 24 (expression)



state 40

    empty_statement  ->  NIL . ';'   (rule 56)

    ';' 	shift, and go to state 72



state 41

    while_statement  ->  WHILE . expression LOOP statement_list END LOOP ';'   (rule 45)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 73



state 42

    for_statement  ->  FOR . ID IN range LOOP statement_list END LOOP ';'   (rule 46)

    ID  	shift, and go to state 74



state 43

    if_statement  ->  IF . expression THEN statement_list elsif_statement_list else_statement END IF ';'   (rule 47)
    if_statement  ->  IF . expression THEN statement_list else_statement END IF ';'   (rule 48)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 75



state 44

    return_statement  ->  RETURN . expression ';'   (rule 54)
    return_statement  ->  RETURN . ';'   (rule 55)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    ';' 	shift, and go to state 76
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 77



state 45

    expression  ->  '+' . expression   (rule 6)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 78



state 46

    expression  ->  '-' . expression   (rule 7)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 79



state 47

    expression  ->  NOT . expression   (rule 8)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 80



state 48

    expression  ->  '(' . expression ')'   (rule 18)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 81



state 49

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    expression_statement  ->  expression . ';'   (rule 41)
    assigment_statement  ->  expression . ASSIGNMENT expression ';'   (rule 44)

    ';' 	shift, and go to state 82
    ASSIGNMENT	shift, and go to state 83
    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97



state 50

    statement_list  ->  statement .   (rule 39)

    $default	reduce using rule 39 (statement_list)



state 51

    statement_list  ->  statement_list . statement   (rule 40)
    program_block  ->  PROCEDURE ID IS BEGINs statement_list . END ID ';'   (rule 69)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 98
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 52

    statement  ->  expression_statement .   (rule 32)

    $default	reduce using rule 32 (statement)



state 53

    statement  ->  assigment_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 54

    statement  ->  while_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 55

    statement  ->  for_statement .   (rule 34)

    $default	reduce using rule 34 (statement)



state 56

    statement  ->  if_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 57

    statement  ->  return_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 58

    statement  ->  empty_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 59

    declaration_statement  ->  variable_declaration ';' .   (rule 65)

    $default	reduce using rule 65 (declaration_statement)



state 60

    program_block  ->  PROCEDURE ID IS declaration_statement_list BEGINs . statement_list END ID ';'   (rule 70)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 100
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 61

    declaration_statement_list  ->  declaration_statement_list declaration_statement .   (rule 68)

    $default	reduce using rule 68 (declaration_statement_list)



state 62

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' . IS BEGINs statement_list END ID ';'   (rule 71)
    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' . IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 72)

    IS  	shift, and go to state 101



state 63

    program_block  ->  FUNCTION ID RETURN variable_type IS BEGINs . statement_list END ID ';'   (rule 73)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 102
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 64

    declaration_statement_list  ->  declaration_statement_list . declaration_statement   (rule 68)
    program_block  ->  FUNCTION ID RETURN variable_type IS declaration_statement_list . BEGINs statement_list END ID ';'   (rule 74)

    error	shift, and go to state 1
    ID  	shift, and go to state 19
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3
    BEGINs	shift, and go to state 103

    variable_declaration	go to state 24
    variable_list	go to state 21
    declaration_statement	go to state 61
    program_block	go to state 27



state 65

    variable_list  ->  variable_list ',' ID .   (rule 62)

    $default	reduce using rule 62 (variable_list)



state 66

    variable_declaration  ->  variable_list ':' ARRAY . '(' range ')' OF variable_type   (rule 60)

    '(' 	shift, and go to state 104



state 67

    variable_declaration  ->  variable_list ':' variable_type .   (rule 59)

    $default	reduce using rule 59 (variable_declaration)



state 68

    variable_declaration_list  ->  variable_declaration_list ';' variable_declaration .   (rule 64)

    $default	reduce using rule 64 (variable_declaration_list)



state 69

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN . variable_type IS BEGINs statement_list END ID ';'   (rule 75)
    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN . variable_type IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 76)

    INTEGER	shift, and go to state 13
    BOOLEAN	shift, and go to state 14
    FLOAT	shift, and go to state 15
    CHARACTER	shift, and go to state 16
    STRING	shift, and go to state 17

    variable_type	go to state 105



state 70

    expression  ->  ID '\'' . LENGTH   (rule 26)

    LENGTH	shift, and go to state 106



state 71

    expression  ->  ID '(' . expression_list ')'   (rule 17)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 107
    expression_list	go to state 108



state 72

    empty_statement  ->  NIL ';' .   (rule 56)

    $default	reduce using rule 56 (empty_statement)



state 73

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    while_statement  ->  WHILE expression . LOOP statement_list END LOOP ';'   (rule 45)

    LOOP	shift, and go to state 109
    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97



state 74

    for_statement  ->  FOR ID . IN range LOOP statement_list END LOOP ';'   (rule 46)

    IN  	shift, and go to state 110



state 75

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    if_statement  ->  IF expression . THEN statement_list elsif_statement_list else_statement END IF ';'   (rule 47)
    if_statement  ->  IF expression . THEN statement_list else_statement END IF ';'   (rule 48)

    THEN	shift, and go to state 111
    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97



state 76

    return_statement  ->  RETURN ';' .   (rule 55)

    $default	reduce using rule 55 (return_statement)



state 77

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    return_statement  ->  RETURN expression . ';'   (rule 54)

    ';' 	shift, and go to state 112
    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97



state 78

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  '+' expression .   (rule 6)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 6 (expression)



state 79

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  '-' expression .   (rule 7)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 7 (expression)



state 80

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  NOT expression .   (rule 8)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84

    $default	reduce using rule 8 (expression)



state 81

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  '(' expression . ')'   (rule 18)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97
    ')' 	shift, and go to state 113



state 82

    expression_statement  ->  expression ';' .   (rule 41)

    $default	reduce using rule 41 (expression_statement)



state 83

    assigment_statement  ->  expression ASSIGNMENT . expression ';'   (rule 44)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 114



state 84

    expression  ->  expression '[' . expression ']'   (rule 19)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 115



state 85

    expression  ->  expression OR . expression   (rule 15)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 116



state 86

    expression  ->  expression AND . expression   (rule 16)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 117



state 87

    expression  ->  expression '=' . expression   (rule 13)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 118



state 88

    expression  ->  expression NOT_EQUAL . expression   (rule 14)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 119



state 89

    expression  ->  expression '<' . expression   (rule 9)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 120



state 90

    expression  ->  expression LESSER_EQUAL . expression   (rule 11)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 121



state 91

    expression  ->  expression '>' . expression   (rule 10)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 122



state 92

    expression  ->  expression GREATER_EQUAL . expression   (rule 12)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 123



state 93

    expression  ->  expression '+' . expression   (rule 1)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 124



state 94

    expression  ->  expression '-' . expression   (rule 2)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 125



state 95

    expression  ->  expression '&' . expression   (rule 5)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 126



state 96

    expression  ->  expression '*' . expression   (rule 3)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 127



state 97

    expression  ->  expression '/' . expression   (rule 4)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 128



state 98

    program_block  ->  PROCEDURE ID IS BEGINs statement_list END . ID ';'   (rule 69)

    ID  	shift, and go to state 129



state 99

    statement_list  ->  statement_list statement .   (rule 40)

    $default	reduce using rule 40 (statement_list)



state 100

    statement_list  ->  statement_list . statement   (rule 40)
    program_block  ->  PROCEDURE ID IS declaration_statement_list BEGINs statement_list . END ID ';'   (rule 70)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 130
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 101

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS . BEGINs statement_list END ID ';'   (rule 71)
    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS . declaration_statement_list BEGINs statement_list END ID ';'   (rule 72)

    error	shift, and go to state 1
    ID  	shift, and go to state 19
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3
    BEGINs	shift, and go to state 131

    variable_declaration	go to state 24
    variable_list	go to state 21
    declaration_statement	go to state 25
    declaration_statement_list	go to state 132
    program_block	go to state 27



state 102

    statement_list  ->  statement_list . statement   (rule 40)
    program_block  ->  FUNCTION ID RETURN variable_type IS BEGINs statement_list . END ID ';'   (rule 73)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 133
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 103

    program_block  ->  FUNCTION ID RETURN variable_type IS declaration_statement_list BEGINs . statement_list END ID ';'   (rule 74)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 134
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 104

    variable_declaration  ->  variable_list ':' ARRAY '(' . range ')' OF variable_type   (rule 60)

    ID  	shift, and go to state 135
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 136
    range	go to state 137



state 105

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type . IS BEGINs statement_list END ID ';'   (rule 75)
    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type . IS declaration_statement_list BEGINs statement_list END ID ';'   (rule 76)

    IS  	shift, and go to state 138



state 106

    expression  ->  ID '\'' LENGTH .   (rule 26)

    $default	reduce using rule 26 (expression)



state 107

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    expression_list  ->  expression .   (rule 57)

    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 57 (expression_list)



state 108

    expression  ->  ID '(' expression_list . ')'   (rule 17)
    expression_list  ->  expression_list . ',' expression   (rule 58)

    ',' 	shift, and go to state 139
    ')' 	shift, and go to state 140



state 109

    while_statement  ->  WHILE expression LOOP . statement_list END LOOP ';'   (rule 45)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 141
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 110

    for_statement  ->  FOR ID IN . range LOOP statement_list END LOOP ';'   (rule 46)

    ID  	shift, and go to state 135
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 136
    range	go to state 142



state 111

    if_statement  ->  IF expression THEN . statement_list elsif_statement_list else_statement END IF ';'   (rule 47)
    if_statement  ->  IF expression THEN . statement_list else_statement END IF ';'   (rule 48)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 143
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 112

    return_statement  ->  RETURN expression ';' .   (rule 54)

    $default	reduce using rule 54 (return_statement)



state 113

    expression  ->  '(' expression ')' .   (rule 18)

    $default	reduce using rule 18 (expression)



state 114

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    assigment_statement  ->  expression ASSIGNMENT expression . ';'   (rule 44)

    ';' 	shift, and go to state 144
    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97



state 115

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    expression  ->  expression '[' expression . ']'   (rule 19)

    '[' 	shift, and go to state 84
    ']' 	shift, and go to state 145
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97



state 116

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression OR expression .   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 15 (expression)



state 117

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression AND expression .   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 16 (expression)



state 118

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression '=' expression .   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 13 (expression)



state 119

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression NOT_EQUAL expression .   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 14 (expression)



state 120

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression '<' expression .   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 9 (expression)



state 121

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression LESSER_EQUAL expression .   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 11 (expression)



state 122

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression '>' expression .   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 10 (expression)



state 123

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression GREATER_EQUAL expression .   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 12 (expression)



state 124

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression '+' expression .   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 1 (expression)



state 125

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression '-' expression .   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 2 (expression)



state 126

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression '&' expression .   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 5 (expression)



state 127

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression '*' expression .   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84

    $default	reduce using rule 3 (expression)



state 128

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression '/' expression .   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)

    '[' 	shift, and go to state 84

    $default	reduce using rule 4 (expression)



state 129

    program_block  ->  PROCEDURE ID IS BEGINs statement_list END ID . ';'   (rule 69)

    ';' 	shift, and go to state 146



state 130

    program_block  ->  PROCEDURE ID IS declaration_statement_list BEGINs statement_list END . ID ';'   (rule 70)

    ID  	shift, and go to state 147



state 131

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS BEGINs . statement_list END ID ';'   (rule 71)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 148
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 132

    declaration_statement_list  ->  declaration_statement_list . declaration_statement   (rule 68)
    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS declaration_statement_list . BEGINs statement_list END ID ';'   (rule 72)

    error	shift, and go to state 1
    ID  	shift, and go to state 19
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3
    BEGINs	shift, and go to state 149

    variable_declaration	go to state 24
    variable_list	go to state 21
    declaration_statement	go to state 61
    program_block	go to state 27



state 133

    program_block  ->  FUNCTION ID RETURN variable_type IS BEGINs statement_list END . ID ';'   (rule 73)

    ID  	shift, and go to state 150



state 134

    statement_list  ->  statement_list . statement   (rule 40)
    program_block  ->  FUNCTION ID RETURN variable_type IS declaration_statement_list BEGINs statement_list . END ID ';'   (rule 74)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 151
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 135

    expression  ->  ID . '(' expression_list ')'   (rule 17)
    expression  ->  ID .   (rule 25)
    expression  ->  ID . '\'' LENGTH   (rule 26)
    range  ->  ID . '\'' RANGE   (rule 43)

    '\''	shift, and go to state 152
    '(' 	shift, and go to state 71

    $default	reduce using rule 25 (expression)



state 136

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    range  ->  expression . DOUBLE_DOT expression   (rule 42)

    DOUBLE_DOT	shift, and go to state 153
    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97



state 137

    variable_declaration  ->  variable_list ':' ARRAY '(' range . ')' OF variable_type   (rule 60)

    ')' 	shift, and go to state 154



state 138

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS . BEGINs statement_list END ID ';'   (rule 75)
    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS . declaration_statement_list BEGINs statement_list END ID ';'   (rule 76)

    error	shift, and go to state 1
    ID  	shift, and go to state 19
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3
    BEGINs	shift, and go to state 155

    variable_declaration	go to state 24
    variable_list	go to state 21
    declaration_statement	go to state 25
    declaration_statement_list	go to state 156
    program_block	go to state 27



state 139

    expression_list  ->  expression_list ',' . expression   (rule 58)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 157



state 140

    expression  ->  ID '(' expression_list ')' .   (rule 17)

    $default	reduce using rule 17 (expression)



state 141

    statement_list  ->  statement_list . statement   (rule 40)
    while_statement  ->  WHILE expression LOOP statement_list . END LOOP ';'   (rule 45)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 158
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 142

    for_statement  ->  FOR ID IN range . LOOP statement_list END LOOP ';'   (rule 46)

    LOOP	shift, and go to state 159



state 143

    statement_list  ->  statement_list . statement   (rule 40)
    if_statement  ->  IF expression THEN statement_list . elsif_statement_list else_statement END IF ';'   (rule 47)
    if_statement  ->  IF expression THEN statement_list . else_statement END IF ';'   (rule 48)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    ELSIF	shift, and go to state 160
    ELSE	shift, and go to state 161
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    $default	reduce using rule 49 (else_statement)

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    else_statement	go to state 162
    elsif_statement	go to state 163
    elsif_statement_list	go to state 164
    return_statement	go to state 57
    empty_statement	go to state 58



state 144

    assigment_statement  ->  expression ASSIGNMENT expression ';' .   (rule 44)

    $default	reduce using rule 44 (assigment_statement)



state 145

    expression  ->  expression '[' expression ']' .   (rule 19)

    $default	reduce using rule 19 (expression)



state 146

    program_block  ->  PROCEDURE ID IS BEGINs statement_list END ID ';' .   (rule 69)

    $default	reduce using rule 69 (program_block)



state 147

    program_block  ->  PROCEDURE ID IS declaration_statement_list BEGINs statement_list END ID . ';'   (rule 70)

    ';' 	shift, and go to state 165



state 148

    statement_list  ->  statement_list . statement   (rule 40)
    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS BEGINs statement_list . END ID ';'   (rule 71)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 166
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 149

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS declaration_statement_list BEGINs . statement_list END ID ';'   (rule 72)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 167
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 150

    program_block  ->  FUNCTION ID RETURN variable_type IS BEGINs statement_list END ID . ';'   (rule 73)

    ';' 	shift, and go to state 168



state 151

    program_block  ->  FUNCTION ID RETURN variable_type IS declaration_statement_list BEGINs statement_list END . ID ';'   (rule 74)

    ID  	shift, and go to state 169



state 152

    expression  ->  ID '\'' . LENGTH   (rule 26)
    range  ->  ID '\'' . RANGE   (rule 43)

    RANGE	shift, and go to state 170
    LENGTH	shift, and go to state 106



state 153

    range  ->  expression DOUBLE_DOT . expression   (rule 42)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 171



state 154

    variable_declaration  ->  variable_list ':' ARRAY '(' range ')' . OF variable_type   (rule 60)

    OF  	shift, and go to state 172



state 155

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS BEGINs . statement_list END ID ';'   (rule 75)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 173
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 156

    declaration_statement_list  ->  declaration_statement_list . declaration_statement   (rule 68)
    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS declaration_statement_list . BEGINs statement_list END ID ';'   (rule 76)

    error	shift, and go to state 1
    ID  	shift, and go to state 19
    FUNCTION	shift, and go to state 2
    PROCEDURE	shift, and go to state 3
    BEGINs	shift, and go to state 174

    variable_declaration	go to state 24
    variable_list	go to state 21
    declaration_statement	go to state 61
    program_block	go to state 27



state 157

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    expression_list  ->  expression_list ',' expression .   (rule 58)

    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 58 (expression_list)



state 158

    while_statement  ->  WHILE expression LOOP statement_list END . LOOP ';'   (rule 45)

    LOOP	shift, and go to state 175



state 159

    for_statement  ->  FOR ID IN range LOOP . statement_list END LOOP ';'   (rule 46)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 176
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 160

    elsif_statement  ->  ELSIF . expression THEN statement_list   (rule 51)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 177



state 161

    else_statement  ->  ELSE . statement_list   (rule 50)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 178
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 162

    if_statement  ->  IF expression THEN statement_list else_statement . END IF ';'   (rule 48)

    END 	shift, and go to state 179



state 163

    elsif_statement_list  ->  elsif_statement .   (rule 52)

    $default	reduce using rule 52 (elsif_statement_list)



state 164

    if_statement  ->  IF expression THEN statement_list elsif_statement_list . else_statement END IF ';'   (rule 47)
    elsif_statement_list  ->  elsif_statement_list . elsif_statement   (rule 53)

    ELSIF	shift, and go to state 160
    ELSE	shift, and go to state 161

    $default	reduce using rule 49 (else_statement)

    else_statement	go to state 180
    elsif_statement	go to state 181



state 165

    program_block  ->  PROCEDURE ID IS declaration_statement_list BEGINs statement_list END ID ';' .   (rule 70)

    $default	reduce using rule 70 (program_block)



state 166

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS BEGINs statement_list END . ID ';'   (rule 71)

    ID  	shift, and go to state 182



state 167

    statement_list  ->  statement_list . statement   (rule 40)
    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS declaration_statement_list BEGINs statement_list . END ID ';'   (rule 72)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 183
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 168

    program_block  ->  FUNCTION ID RETURN variable_type IS BEGINs statement_list END ID ';' .   (rule 73)

    $default	reduce using rule 73 (program_block)



state 169

    program_block  ->  FUNCTION ID RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID . ';'   (rule 74)

    ';' 	shift, and go to state 184



state 170

    range  ->  ID '\'' RANGE .   (rule 43)

    $default	reduce using rule 43 (range)



state 171

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    range  ->  expression DOUBLE_DOT expression .   (rule 42)

    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97

    $default	reduce using rule 42 (range)



state 172

    variable_declaration  ->  variable_list ':' ARRAY '(' range ')' OF . variable_type   (rule 60)

    INTEGER	shift, and go to state 13
    BOOLEAN	shift, and go to state 14
    FLOAT	shift, and go to state 15
    CHARACTER	shift, and go to state 16
    STRING	shift, and go to state 17

    variable_type	go to state 185



state 173

    statement_list  ->  statement_list . statement   (rule 40)
    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS BEGINs statement_list . END ID ';'   (rule 75)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 186
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 174

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS declaration_statement_list BEGINs . statement_list END ID ';'   (rule 76)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 187
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 175

    while_statement  ->  WHILE expression LOOP statement_list END LOOP . ';'   (rule 45)

    ';' 	shift, and go to state 188



state 176

    statement_list  ->  statement_list . statement   (rule 40)
    for_statement  ->  FOR ID IN range LOOP statement_list . END LOOP ';'   (rule 46)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 189
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 177

    expression  ->  expression . '+' expression   (rule 1)
    expression  ->  expression . '-' expression   (rule 2)
    expression  ->  expression . '*' expression   (rule 3)
    expression  ->  expression . '/' expression   (rule 4)
    expression  ->  expression . '&' expression   (rule 5)
    expression  ->  expression . '<' expression   (rule 9)
    expression  ->  expression . '>' expression   (rule 10)
    expression  ->  expression . LESSER_EQUAL expression   (rule 11)
    expression  ->  expression . GREATER_EQUAL expression   (rule 12)
    expression  ->  expression . '=' expression   (rule 13)
    expression  ->  expression . NOT_EQUAL expression   (rule 14)
    expression  ->  expression . OR expression   (rule 15)
    expression  ->  expression . AND expression   (rule 16)
    expression  ->  expression . '[' expression ']'   (rule 19)
    elsif_statement  ->  ELSIF expression . THEN statement_list   (rule 51)

    THEN	shift, and go to state 190
    '[' 	shift, and go to state 84
    OR  	shift, and go to state 85
    AND 	shift, and go to state 86
    '=' 	shift, and go to state 87
    NOT_EQUAL	shift, and go to state 88
    '<' 	shift, and go to state 89
    LESSER_EQUAL	shift, and go to state 90
    '>' 	shift, and go to state 91
    GREATER_EQUAL	shift, and go to state 92
    '+' 	shift, and go to state 93
    '-' 	shift, and go to state 94
    '&' 	shift, and go to state 95
    '*' 	shift, and go to state 96
    '/' 	shift, and go to state 97



state 178

    statement_list  ->  statement_list . statement   (rule 40)
    else_statement  ->  ELSE statement_list .   (rule 50)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    $default	reduce using rule 50 (else_statement)

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 179

    if_statement  ->  IF expression THEN statement_list else_statement END . IF ';'   (rule 48)

    IF  	shift, and go to state 191



state 180

    if_statement  ->  IF expression THEN statement_list elsif_statement_list else_statement . END IF ';'   (rule 47)

    END 	shift, and go to state 192



state 181

    elsif_statement_list  ->  elsif_statement_list elsif_statement .   (rule 53)

    $default	reduce using rule 53 (elsif_statement_list)



state 182

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS BEGINs statement_list END ID . ';'   (rule 71)

    ';' 	shift, and go to state 193



state 183

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS declaration_statement_list BEGINs statement_list END . ID ';'   (rule 72)

    ID  	shift, and go to state 194



state 184

    program_block  ->  FUNCTION ID RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';' .   (rule 74)

    $default	reduce using rule 74 (program_block)



state 185

    variable_declaration  ->  variable_list ':' ARRAY '(' range ')' OF variable_type .   (rule 60)

    $default	reduce using rule 60 (variable_declaration)



state 186

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS BEGINs statement_list END . ID ';'   (rule 75)

    ID  	shift, and go to state 195



state 187

    statement_list  ->  statement_list . statement   (rule 40)
    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS declaration_statement_list BEGINs statement_list . END ID ';'   (rule 76)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    END 	shift, and go to state 196
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 188

    while_statement  ->  WHILE expression LOOP statement_list END LOOP ';' .   (rule 45)

    $default	reduce using rule 45 (while_statement)



state 189

    for_statement  ->  FOR ID IN range LOOP statement_list END . LOOP ';'   (rule 46)

    LOOP	shift, and go to state 197



state 190

    elsif_statement  ->  ELSIF expression THEN . statement_list   (rule 51)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    expression	go to state 49
    statement	go to state 50
    statement_list	go to state 198
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 191

    if_statement  ->  IF expression THEN statement_list else_statement END IF . ';'   (rule 48)

    ';' 	shift, and go to state 199



state 192

    if_statement  ->  IF expression THEN statement_list elsif_statement_list else_statement END . IF ';'   (rule 47)

    IF  	shift, and go to state 200



state 193

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS BEGINs statement_list END ID ';' .   (rule 71)

    $default	reduce using rule 71 (program_block)



state 194

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS declaration_statement_list BEGINs statement_list END ID . ';'   (rule 72)

    ';' 	shift, and go to state 201



state 195

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS BEGINs statement_list END ID . ';'   (rule 75)

    ';' 	shift, and go to state 202



state 196

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS declaration_statement_list BEGINs statement_list END . ID ';'   (rule 76)

    ID  	shift, and go to state 203



state 197

    for_statement  ->  FOR ID IN range LOOP statement_list END LOOP . ';'   (rule 46)

    ';' 	shift, and go to state 204



state 198

    statement_list  ->  statement_list . statement   (rule 40)
    elsif_statement  ->  ELSIF expression THEN statement_list .   (rule 51)

    ID  	shift, and go to state 34
    CONST_STRING	shift, and go to state 35
    CONST_INTEGER	shift, and go to state 36
    CONST_FLOAT	shift, and go to state 37
    CONST_CHARACTER	shift, and go to state 38
    CONST_BOOL	shift, and go to state 39
    NIL 	shift, and go to state 40
    WHILE	shift, and go to state 41
    FOR 	shift, and go to state 42
    IF  	shift, and go to state 43
    RETURN	shift, and go to state 44
    '+' 	shift, and go to state 45
    '-' 	shift, and go to state 46
    NOT 	shift, and go to state 47
    '(' 	shift, and go to state 48

    $default	reduce using rule 51 (elsif_statement)

    expression	go to state 49
    statement	go to state 99
    expression_statement	go to state 52
    assigment_statement	go to state 53
    while_statement	go to state 54
    for_statement	go to state 55
    if_statement	go to state 56
    return_statement	go to state 57
    empty_statement	go to state 58



state 199

    if_statement  ->  IF expression THEN statement_list else_statement END IF ';' .   (rule 48)

    $default	reduce using rule 48 (if_statement)



state 200

    if_statement  ->  IF expression THEN statement_list elsif_statement_list else_statement END IF . ';'   (rule 47)

    ';' 	shift, and go to state 205



state 201

    program_block  ->  PROCEDURE ID '(' variable_declaration_list ')' IS declaration_statement_list BEGINs statement_list END ID ';' .   (rule 72)

    $default	reduce using rule 72 (program_block)



state 202

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS BEGINs statement_list END ID ';' .   (rule 75)

    $default	reduce using rule 75 (program_block)



state 203

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID . ';'   (rule 76)

    ';' 	shift, and go to state 206



state 204

    for_statement  ->  FOR ID IN range LOOP statement_list END LOOP ';' .   (rule 46)

    $default	reduce using rule 46 (for_statement)



state 205

    if_statement  ->  IF expression THEN statement_list elsif_statement_list else_statement END IF ';' .   (rule 47)

    $default	reduce using rule 47 (if_statement)



state 206

    program_block  ->  FUNCTION ID '(' variable_declaration_list ')' RETURN variable_type IS declaration_statement_list BEGINs statement_list END ID ';' .   (rule 76)

    $default	reduce using rule 76 (program_block)



state 207

    $   	go to state 208



state 208

    $   	go to state 209



state 209

    $default	accept
